package com.app;

import static com.app.FrmViewTransaction.transactionid;
import static com.app.SQLite.conn;
import static com.app.SQLite.stmt;
import static com.app.SQLite.url;
import static java.sql.DriverManager.getConnection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

public class FrmViewCars extends javax.swing.JFrame {

    public FrmViewCars() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.viewTable();
        comboboxItem();
    }
    
    private boolean checkRentalSchedule(){
        boolean valid = false;
        try {
            conn = getConnection(url);
            stmt = conn.createStatement();
            
            int id = Integer.parseInt(this.cbCar.getSelectedItem().toString());
            SimpleDateFormat dateFormat1 = new SimpleDateFormat("yyyy-MM-dd");
            String dateStart = dateFormat1.format(sdate.getDate());
            String dateEnd = dateFormat1.format(edate.getDate());
            System.out.println("id = " + id);

            String query = "select * from tblTransactionDetails1 where carno='"+id+"' and '"+dateStart+"' between sdate " +
                        "and edate or carno='"+id+"' and '"+dateEnd+"' between sdate and edate or" + 
                        " carno='"+id+"' and sdate between '"+dateStart+"' and '"+dateEnd+"' or " + 
                        " carno='"+id+"' and edate between '"+dateStart+"' and '"+dateEnd+"'";

            ResultSet rss = stmt.executeQuery(query);
            
            if(rss.next()){
                System.out.println("FOUND!");
                valid = true;
            }else
                System.out.println("NOT FOUND!");
            
            
            conn.close();
        } catch (SQLException ex) {
            
        }
                
        return valid; 
    }
    
     private boolean checkRentalScheduleDate(){
        boolean valid = true;
  
           try{
            SimpleDateFormat dateFormat1 = new SimpleDateFormat("yyyy-MM-dd");
            String currentDate = dateFormat1.format(new Date());
            String dateStart = dateFormat1.format(sdate.getDate());
            String dateEnd = dateFormat1.format(edate.getDate());
            
            if(dateStart.compareTo(currentDate) >= 0 && dateStart.compareTo(dateEnd) <= 0){
                valid = false;
            }else{
                System.out.println("date not valid!");
            }   
           }
           catch(Exception e ){
               System.out.println("Error : " + e.getMessage());
           }
        return valid; 
    }
    
    private void comboboxItem(){
        try{
            SQLite.conn = getConnection(SQLite.url);
            SQLite.stmt = SQLite.conn.createStatement();
            
            String query = "select * from tblTransactionDetails1";
            ResultSet rs = SQLite.stmt.executeQuery(query);
            
            while(rs.next()){
                int id= Integer.parseInt(rs.getString("id"));
                
                int genID = id+1;
                this.txtID.setText(String.valueOf(genID));
            }
            
            String q = "select * from tblCar";
            ResultSet rss = SQLite.stmt.executeQuery(q);
            
            while(rss.next()){
                String name= rss.getString("carno");
                this.cbCar.addItem(name);
            }
            
            String qq = "select * from tblCar where carno=" + this.cbCar.getSelectedItem();
            ResultSet rsss = SQLite.stmt.executeQuery(qq);
            
            while(rss.next()){
                this.txtCarname.setText(rss.getString("name"));
                this.txtCapacity.setText(rss.getString("capacity"));
            }
            
            conn.close();
       }
       catch(Exception e){
           System.out.println("error: " + e.getMessage());
       }
    }
    
    public void viewTable(){
            if (SQLite.openDB()) {
                String[][] data = SQLite.read1("tblTransactionDetails1", " transactionno = " + transactionid);
                String[] column = {"Car ID", "Start Date", "End Date", "Transaction ID", "Car no"};
                javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel(data, column);
                this.tblTransactionDetails.setModel(model);
                SQLite.closeDB();
            }
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblTransactionDetails = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtID_delete = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        txtID_edit = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        txtCarname = new javax.swing.JTextField();
        txtCapacity = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cbCar = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        sdate = new com.toedter.calendar.JDateChooser();
        edate = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblTransactionDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTransactionDetails);

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 102, 255));
        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Car ID");

        txtID_delete.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnDelete.setBackground(new java.awt.Color(204, 0, 0));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(51, 255, 0));
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        txtID_edit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Car ID");

        jLabel2.setText("Car name");

        txtCarname.setEnabled(false);

        txtCapacity.setEnabled(false);

        jLabel4.setText("Capacity");

        cbCar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbCarMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cbCarMousePressed(evt);
            }
        });
        cbCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCarActionPerformed(evt);
            }
        });

        jLabel9.setText("Start Date");

        jLabel11.setText("End Date");

        jLabel10.setText("Car No.");

        btnSubmit.setBackground(new java.awt.Color(51, 204, 255));
        btnSubmit.setText("Add Car");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jLabel5.setText("ID");

        txtID.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(69, 69, 69)
                                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addGap(43, 43, 43)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtCarname)
                                            .addComponent(cbCar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel11))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtCapacity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(sdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(edate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtID_delete)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtID_edit)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEdit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator1)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtID_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtID_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel11))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(cbCar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtCarname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        FrmViewTransaction m = new FrmViewTransaction();
        m.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try{
           if(SQLite.openDB()){
               String[][] r = SQLite.read1("tblTransactionDetails1", "id =" + this.txtID_delete.getText());
               if(r.length > 0){
                   
                if(SQLite.delete("tblTransactionDetails1", Integer.parseInt(this.txtID_delete.getText()))){
                 javax.swing.JOptionPane.showMessageDialog(null, "Transaction has been deleted!");
                 
                 }
                 else{
                     javax.swing.JOptionPane.showMessageDialog(null, "Delete Error!");
                 }
               }
               else{
                   javax.swing.JOptionPane.showMessageDialog(null, "Cannot find Car ID");
               }
            }
           viewTable();
        }catch(Exception e){
            javax.swing.JOptionPane.showMessageDialog(null, "Cannot find Car ID");
        }
         SQLite.closeDB();
    }//GEN-LAST:event_btnDeleteActionPerformed
public static int carID;
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        try{
            if(SQLite.openDB()){
                String[][] r = SQLite.read1("tblTransactionDetails1", "id =" + this.txtID_edit.getText());

                if(r.length > 0){
                    carID = Integer.parseInt(this.txtID_edit.getText());

                    FrmUpdateTransaction m = new FrmUpdateTransaction();
                    m.setVisible(true);
                }
                else{
                    javax.swing.JOptionPane.showMessageDialog(null, "Cannot find Transaction ID");
                }
            }
        }catch(Exception e){
            javax.swing.JOptionPane.showMessageDialog(null, "Cannot find Transaction ID");
        }
        SQLite.closeDB();
    }//GEN-LAST:event_btnEditActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.viewTable();
        this.txtID_delete.setText("");
        this.txtID_edit.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cbCarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbCarMouseClicked

    }//GEN-LAST:event_cbCarMouseClicked

    private void cbCarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbCarMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCarMousePressed

    static String cartypeid = "";
    private void cbCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCarActionPerformed
        try{
            SQLite.conn = getConnection(SQLite.url);
            SQLite.stmt = SQLite.conn.createStatement();
            String query = "select * from tblCar where carno=" + this.cbCar.getSelectedItem();

            
            ResultSet rs = SQLite.stmt.executeQuery(query);
            while(rs.next()){
                String name= rs.getString("carno");
                this.txtCarname.setText(rs.getString("name"));
                cartypeid = rs.getString("cartypeid");
            }
            
            String q = "select * from tblCartype where id =" + cartypeid;
            
            ResultSet rss = SQLite.stmt.executeQuery(q);
            
            while(rss.next()){
                this.txtCapacity.setText(rss.getString("capacity"));
            }
        }
        catch(Exception e){
            System.out.println("error: " + e.getMessage());
        }
    }//GEN-LAST:event_cbCarActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        if(checkRentalSchedule()){
            JOptionPane.showMessageDialog(null, "Your selected date is not valid");
        }else if(checkRentalScheduleDate()){
            JOptionPane.showMessageDialog(null, "Dates not available");
        }
        else{
            if(SQLite.openDB()){
                try{
                    SimpleDateFormat dateFormat2 = new SimpleDateFormat("yyyy-MM-dd");
                    String dateStart = dateFormat2.format(sdate.getDate());
                    String dateEnd = dateFormat2.format(edate.getDate());

                    int Cno = Integer.parseInt((String) this.cbCar.getSelectedItem());
                    
                    String values = "'" +  dateStart + "','" + dateEnd + "'," + transactionid + "," + Cno;
                    String set = "sdate, edate, transactionno, carno";

                    SQLite.create("tblTransactionDetails1", set, values);

                    String name = this.txtCarname.getText();
                    String capacity = this.txtCapacity.getText();
                    int cartype = 0;
                    
                    javax.swing.JOptionPane.showMessageDialog(null, "New Transaction has been created!");
                    
                }
                catch(Exception e){
                    javax.swing.JOptionPane.showMessageDialog(null, "Create Error: " + e.getMessage());
                }
            }
            viewTable();
            SQLite.closeDB();
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmViewCars.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmViewCars.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmViewCars.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmViewCars.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmViewCars().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cbCar;
    private com.toedter.calendar.JDateChooser edate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private com.toedter.calendar.JDateChooser sdate;
    private javax.swing.JTable tblTransactionDetails;
    private javax.swing.JTextField txtCapacity;
    private javax.swing.JTextField txtCarname;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtID_delete;
    private javax.swing.JTextField txtID_edit;
    // End of variables declaration//GEN-END:variables
}
